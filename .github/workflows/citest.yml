# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: CI Testing

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.17.0]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Cache npm modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-
    - run: npm ci
    - name: Run ESLint
      run: npx eslint "**/*.{js,jsx,ts,tsx}" | tee eslint-report-${{ matrix.node-version }}.txt || true
    - name: Upload ESLint report as an artifact
      uses: actions/upload-artifact@v4
      with:
        name: eslint-report-${{ matrix.node-version }}
        path: eslint-report-${{ matrix.node-version }}.txt
    - name: Run security audit
      run: npm audit --audit-level=moderate
  
    - run: npm run build --if-present
    - name: run Lighthouse CI
      # get the build dir - dist
      # uploades to temporary public storage where the report will be available
      # assertions are disabled to avoid failing the build
      # verbose - get more info about the run
      run: |
        npm install -g @lhci/cli@0.14.x
        lhci autorun --collect.staticDistDir=dist --assert.assertions=disabled --upload.target=temporary-public-storage --verbose
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        VITE_APP_API_URL: ${{ secrets.VITE_APP_API_URL }}